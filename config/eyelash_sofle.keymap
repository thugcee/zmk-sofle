#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&gresc { mods = <(MOD_LALT|MOD_LCTL)>; };

&lt { quick-tap-ms = <200>; };

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        home {
            bindings = <&kp HOME>;
            key-positions = <34 35>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <36 37>;
        };

        next-word {
            bindings = <&kp LC(RIGHT)>;
            key-positions = <49 50>;
        };

        prev-word {
            bindings = <&kp LC(LEFT)>;
            key-positions = <47 48>;
        };
    };

    behaviors {
        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&shifted>, <&kp>;
        };
    };

    macros {
        shifted: macro_shifted_kp {
            #binding-cells = <1>;
            label = "MACRO_SHIFTED_KP";
            compatible = "zmk,behavior-macro-one-param";
            bindings =
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        as: autoshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            label = "AUTOSHIFT_KP";
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&gresc      &as N1     &as N2    &as N3        &as N4       &as N5       &kp UP_ARROW     &as N6           &as N7       &as N8     &as N9   &as N0         &as EQUAL
&lt 2 TAB   &kp Q      &kp W     &kp E         &kp R        &kp T        &kp DOWN_ARROW   &kp Y            &kp U        &kp I      &kp O    &kp P          &as MINUS
&kp LCTRL   &kp A      &kp S     &kp D         &kp F        &kp G        &kp LEFT_ARROW   &kp H            &kp J        &kp K      &kp L    &as SEMI       &as APOS
&kp LSHFT   &kp Z      &kp X     &kp C         &kp V        &kp B        &kp RIGHT_ARROW  &kp N            &kp M        &as COMMA  &as DOT  &as FSLH       &lt 2 ENTER
&kp C_MUTE  &kp LCTRL  &kp LGUI  &kp LEFT_ALT  &lt 1 SPACE  &kp LSHFT    &kp LC(W)        &lt 1 BACKSPACE  &lt 1 SPACE  &kp RALT   &kp DEL  &as BACKSLASH
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Base";
        };

        layer_1 {
            bindings = <
&kp F12     &kp F1           &kp F2           &kp F3           &kp F4           &kp F5         &kp PG_UP      &kp F6    &kp F7     &kp F8    &kp F9     &kp F10        &kp F11
&trans      &kp GRAVE        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp LC(X)      &kp PG_DN      &kp INS   &kp PG_UP  &kp UP    &trans     &kp MINUS      &kp F12
&trans      &kp TILDE        &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp LC(C)      &kp LA(LEFT)   &kp HOME  &kp LEFT   &kp DOWN  &kp RIGHT  &kp END        &trans
&trans      &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp LS(INS)    &kp LA(RIGHT)  &kp DEL   &kp PG_DN  &kp LBKT  &kp RBKT   &kp BACKSLASH  &trans
&kp C_MUTE  &trans           &trans           &trans           &trans           &trans         &mkp LCLK      &trans    &trans     &trans    &trans     &trans
            >;

            display-name = "NavNumFun";
            sensor-bindings = <&scroll_encoder>;
        };

        Mgmt {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &rgb_ug RGB_COLOR_HSB(185,72,36)  &rgb_ug RGB_COLOR_HSB(327,82,45)  &rgb_ug RGB_COLOR_HSB(39,100,50)  &trans           &kp C_VOLUME_UP  &trans
&trans     &trans        &trans        &trans        &trans        &trans          &mmv MOVE_DOWN   &rgb_ug RGB_ON                    &rgb_ug RGB_OFF                   &rgb_ug RGB_BRI                   &rgb_ug RGB_BRD  &kp C_MUTE       &trans
&trans     &out OUT_USB  &out OUT_BLE  &trans        &trans        &trans          &mmv MOVE_LEFT   &rgb_ug RGB_EFF                   &rgb_ug RGB_EFR                   &trans                            &trans           &kp C_VOL_DN     &trans
&trans     &trans        &trans        &trans        &trans        &bootloader     &mmv MOVE_RIGHT  &rgb_ug RGB_SPI                   &rgb_ug RGB_SPD                   &trans                            &soft_off        &trans           &trans
&trans     &trans        &trans        &trans        &trans        &trans          &mkp LCLK        &trans                            &trans                            &trans                            &kp C_AL_EMAIL   &kp C_SLEEP
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Danger {
            bindings = <
&trans  &trans      &trans  &trans      &trans  &trans         &trans  &trans       &trans  &trans  &trans  &trans      &trans
&trans  &trans      &trans  &trans      &trans  &trans         &trans  &trans       &trans  &trans  &trans  &trans      &trans
&trans  &trans      &trans  &trans      &trans  &trans         &trans  &trans       &trans  &trans  &trans  &trans      &trans
&trans  &sys_reset  &trans  &bt BT_CLR  &trans  &bootloader    &trans  &bootloader  &trans  &trans  &trans  &sys_reset  &trans
&trans  &trans      &trans  &trans      &trans  &trans         &trans  &trans       &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        one+two {
            if-layers = <0 1>;
            then-layer = <3>;
        };
    };
};
